#include<stdio.h>
#include<string.h>
#include<math.h>
// int main()
// {
//     char arr1[]="21313";
//     char arr2[20] = "jj";
//     strcpy(arr2,arr1);
//     printf("%s",arr2);
// }

// int is_prime(int n)
// {
//     int j=0;

//     for(j=2;j<=sqrt(n);j++)
//     {
//         if(n%j==0)
//         {
//             return 0;
              
//         }
       
           
//     }
//     if (j>sqrt(n))
//         {
//             return 1;
    
//         }
// }
// int main()
// {

//     int i = 0;
//     for(i=100;i<=200;i++)
//     {
//         if(is_prime(i)==1)
//         {
//             printf("%d ",i);
//         }
//     }  
//     return 0;

// }
// int is_leap_year(int y)
// {
//     if((y%4==0&&y%100!=0) || (y%400==0))
//         return 1;
//     else
//         return 0;
// }
// int main()
// {
//     int year = 2000;
//     for(year=1000;year<=2000;year++)
//     {
//         if(1==is_leap_year(year))
//         {
//             printf("%d ",year);
//         }
//     }
//     return 0;
// }
// int binary_search(int arr[],int k,int sz)
// {
    
//     int left = 0;
//     int right = sz-1; 
    
//     while (left<=right)
//     {
//         int mid = (left+right)/2;
//         if(k>arr[mid])
//         {
//             left = mid + 1;
//         }
//         else if(k<arr[mid]) 
//         {
//             right = mid - 1;
//         }
//         else
//         {
//             return mid;
//             break;
            
//         }
//     }
//     if(left>right)
//     {
//         return -1;
//     }
    

// }
// int main()
// {
//     int arr[] = {1,2,3,4,5,6,7,8,9,10};
//     int k = 1;
//     int sz = sizeof(arr)/sizeof(1);
//     int ret = binary_search(arr,k,sz);
//     if(ret == -1)
//     {
//         printf("can't search the number\n");

//     }
//     else
//     {
//         printf("the subscrip is:%d",ret);
//     }

//     return 0;

// }

// #include"add.h"


// int main()
// {
//     int a =10;
//     int b = 20;
//     int sum = Add(a,b);
//     printf("%d\n",sum);
//     return 0;
// }


//递归—
// void sss(int n)
// {
    
//     if(n>9)
//     {
//       sss(n/10);
//     }
    
//     printf("%d ",n%10);
// }

// int main()
// {
//     unsigned int i = 0;
    
//     scanf("%d",&i);
//     sss(i);   
//     return 0;
// }
// int swap(char* n)
// {
//   if(*n != '\0')
//   {
//     return 1+swap(n+1);
    
//   }
//   else
//   {
//     return 0;
//   }
// }

// int main()
// {
//   char arr[] = "bit";
//   int i = 0;
//   i = swap(arr);
//   printf("%d",i);
//   return 0;
// }
//求n阶乘
// int nas(int i)
// {
//   if(i>=1)
//   {
//     return i*nas(i-1);
//   }
//   else
//   {
//     return 1;
//   }
  
// }
// int main()
// {
//   int i = 0;
//   int ret = 0;
//   scanf("%d",&i);
//   ret = nas(i);
//   printf("%d",ret);
//   return 0;
// }
//斐波拉且数列
// int feibo(int i)
// {
//   if(i<=2)
//   {
//     return 1;
//   }
//   else
//   {
//     return feibo(i-1)+feibo(i-2);
//   }
// }
// int feibo()
// {

// }
// int main()
// {
//   int i = 0;
//   scanf("%d",&i);
//   int ret = feibo(i);
//   printf("%d\n",ret);
//   return 0;
// }

//冒泡排序
// void bubble_sort(int arr[],int sz)
// {
//   int i=0;
//   for(i=0;i<sz-1;i++)
//   {
//     int j = 0;
//     int flag = 1;
//     for(j=0;j<sz-1-i;j++)
//     {
//       if(arr[j]>arr[j+1])
//       {
//         int atm = 0;
//         atm = arr[j+1];
//         arr[j+1] = arr[j];
//         arr[j] = atm;
//         flag = 0;      
//       }
      
//     }
//     if(flag == 1)
//     {
//       break;
//     }
//   }

// }

// int main()
// {
//   int arr[] ={5,4,6,7,9,5,3,1,2,10};
//   int sz = sizeof(arr)/sizeof(arr[0]);
//   int i = 0;
//   bubble_sort(arr,sz);
//   for(i=0;i<sz;i++)
//   {
//     printf("%d ",arr[i]);
//   }
//   return 0;
// }
//计算二进制里面有几个1

// int count_sum(unsigned int a)
// {
//     int count = 0;
//     while (a)
//     {
//         if(a%2==1)
//         {count++;
//         }
//         a = a/2;

//     }
    
    
//     return count;
// }
// int count_sum(int a)
// {
//     int count = 0;
//     while (a)
//     {
//         a = a&(a-1);
//         count++;
//     }
//     return count;
    
// }
// int main()
// {
//     int a = 0;
//     scanf("%d",&a);
//     int count = count_sum(a);
//     printf("%d\n",count);
//     return 0;
// }

